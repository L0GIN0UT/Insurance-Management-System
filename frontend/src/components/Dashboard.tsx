import React, { useState } from 'react';
import ClientsPage from './ClientsPage';
import ContractsPage from './ContractsPage';
import ClaimsPage from './ClaimsPage';
import AnalyticsPage from './AnalyticsPage';
import UsersPage from './UsersPage';
import OperatorPage from './OperatorPage';

interface User {
  id: string;
  username: string;
  email: string;
  full_name: string;
  role: string;
}

interface DashboardProps {
  user: User;
  onLogout: () => void;
}

type MenuItem = {
  id: string;
  title: string;
  icon: string;
  description: string;
  roles: string[];
};

const menuItems: MenuItem[] = [
  {
    id: 'clients',
    title: '–ö–ª–∏–µ–Ω—Ç—ã',
    icon: 'üë•',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –∫–ª–∏–µ–Ω—Ç–æ–≤',
    roles: ['agent', 'operator', 'admin']
  },
  {
    id: 'contracts',
    title: '–î–æ–≥–æ–≤–æ—Ä—ã',
    icon: 'üìÑ',
    description: '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏',
    roles: ['agent', 'operator']
  },
  {
    id: 'claims',
    title: '–°—Ç—Ä–∞—Ö–æ–≤—ã–µ —Å–ª—É—á–∞–∏',
    icon: 'üîç',
    description: '–£—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ö–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤',
    roles: ['adjuster']
  },
  {
    id: 'analytics',
    title: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
    icon: 'üìä',
    description: '–û—Ç—á—ë—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
    roles: ['manager', 'admin']
  },
  {
    id: 'users',
    title: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
    icon: 'üë§',
    description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Ä–æ–ª—è–º–∏',
    roles: ['admin']
  },
  {
    id: 'operator',
    title: '–†–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ',
    icon: 'üíº',
    description: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π –∏ –∑–∞—è–≤–æ–∫',
    roles: ['operator']
  }
];

export const Dashboard: React.FC<DashboardProps> = ({ user, onLogout }) => {
  const [activeSection, setActiveSection] = useState<string | null>(null);

  const availableMenuItems = menuItems.filter(item => 
    item.roles.includes(user.role)
  );

  const handleMenuClick = (sectionId: string) => {
    setActiveSection(activeSection === sectionId ? null : sectionId);
  };

  const renderSection = () => {
    switch (activeSection) {
      case 'clients':
        return <ClientsPage />;
      case 'contracts':
        return <ContractsPage />;
      case 'claims':
        return <ClaimsPage />;
      case 'analytics':
        return <AnalyticsPage />;
      case 'users':
        return <UsersPage />;
      case 'operator':
        return <OperatorPage />;
      default:
        return null;
    }
  };

  return (
    <div className="dashboard">
      <header className="dashboard-header">
        <div className="header-content">
          <div className="logo">IMS</div>
          <h1>Insurance Management System</h1>
          <div className="user-info">
            <span>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.full_name}</span>
            <span className="role-badge">{getRoleDisplayName(user.role)}</span>
            <button onClick={onLogout} className="logout-btn">–í—ã–π—Ç–∏</button>
          </div>
        </div>
      </header>

      <main className="dashboard-main">
        <div className="dashboard-content">
          {activeSection ? (
            <div className="section-content">
              <button 
                onClick={() => setActiveSection(null)} 
                className="back-btn"
              >
                ‚Üê –ù–∞–∑–∞–¥ –∫ –≥–ª–∞–≤–Ω–æ–π
              </button>
              {renderSection()}
            </div>
          ) : (
            <>
          <div className="welcome-card">
            <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ–º!</h2>
            <p>–í–∞—à–∞ —Ä–æ–ª—å: <strong>{getRoleDisplayName(user.role)}</strong></p>
            <p>Email: {user.email}</p>
                <div className="role-permissions">
                  <h4>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</h4>
                  <ul>
                    {getRolePermissions(user.role).map((permission, index) => (
                      <li key={index}>{permission}</li>
                    ))}
                  </ul>
                </div>
          </div>

          <div className="features-grid">
                {availableMenuItems.map((item) => (
                  <div 
                    key={item.id} 
                    className="feature-card"
                    onClick={() => handleMenuClick(item.id)}
                  >
                    <div className="feature-icon">{item.icon}</div>
                    <h3>{item.title}</h3>
                    <p>{item.description}</p>
              <button className="feature-btn">–û—Ç–∫—Ä—ã—Ç—å</button>
            </div>
                ))}
            </div>
            </>
          )}
        </div>
      </main>
    </div>
  );
};

function getRoleDisplayName(role: string): string {
  const roleNames: { [key: string]: string } = {
    'agent': '–ê–≥–µ–Ω—Ç',
    'adjuster': '–£—Ä–µ–≥—É–ª–∏—Ä–æ–≤—â–∏–∫',
    'operator': '–û–ø–µ—Ä–∞—Ç–æ—Ä',
    'manager': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
    'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
  };
  return roleNames[role] || role;
} 

function getRolePermissions(role: string): string[] {
  const permissions: { [key: string]: string[] } = {
    'agent': [
      '–†–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏',
      '–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤',
      '–†–∞—Å—á—ë—Ç —Å—Ç—Ä–∞—Ö–æ–≤—ã—Ö –ø—Ä–µ–º–∏–π',
      '–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ö–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤'
    ],
    'adjuster': [
      '–£—Ä–µ–≥—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞—Ö–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤',
      '–ü—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏–π –ø–æ –≤—ã–ø–ª–∞—Ç–∞–º',
      '–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –∑–∞—è–≤–∫–∞–º',
      '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞—è–≤–æ–∫'
    ],
    'operator': [
      '–í–µ–¥–µ–Ω–∏–µ –±–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–æ–≤',
      '–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
      '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞—â–µ–Ω–∏–π',
      '–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–æ–∫ –¥–ª—è —É—Ä–µ–≥—É–ª–∏—Ä–æ–≤—â–∏–∫–æ–≤'
    ],
    'manager': [
      '–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á—ë—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
      '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á—ë—Ç—ã',
      '–ö–æ–Ω—Ç—Ä–æ–ª—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
      '–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö'
    ],
    'admin': [
      '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏',
      '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –∏ –ø—Ä–∞–≤',
      '–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ',
      '–°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'
    ]
  };
  return permissions[role] || [];
} 