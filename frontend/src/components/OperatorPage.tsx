import React, { useState } from 'react';

const OperatorPage: React.FC = () => {
  const [activeTab, setActiveTab] = useState<'search' | 'submit' | 'stats'>('search');
  const [submitForm, setSubmitForm] = useState({
    contract_id: '',
    incident_date: '',
    description: '',
    claim_amount: '',
    documents: [] as string[],
    priority: 'normal',
    customer_contact: '',
    witnesses: [] as string[]
  });
  const [submitResult, setSubmitResult] = useState<any>(null);
  const [submitLoading, setSubmitLoading] = useState(false);

  const handleSubmitClaim = async () => {
    setSubmitLoading(true);
    try {
      const token = localStorage.getItem('token');
      const response = await fetch('/api/v1/claims/submit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify({
          ...submitForm,
          claim_amount: parseFloat(submitForm.claim_amount),
          contract_id: parseInt(submitForm.contract_id)
        })
      });

      if (response.ok) {
        const result = await response.json();
        setSubmitResult(result);
      } else {
        const error = await response.json();
        setSubmitResult({ error: error.detail || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏' });
      }
    } catch (error) {
      setSubmitResult({ error: '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è' });
    }
    setSubmitLoading(false);
  };

  return (
    <div className="page-container">
      <div className="page-header">
        <h1>–†–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞</h1>
        <div className="operator-status">
          <span className="status-indicator active"></span>
          <span>–í —Ä–∞–±–æ—Ç–µ</span>
        </div>
      </div>

      <div className="tab-buttons">
        <button 
          className={`tab-btn ${activeTab === 'search' ? 'active' : ''}`}
          onClick={() => setActiveTab('search')}
        >
          üîç –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤
        </button>
        <button 
          className={`tab-btn ${activeTab === 'submit' ? 'active' : ''}`}
          onClick={() => setActiveTab('submit')}
        >
          üìù –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏
        </button>
        <button 
          className={`tab-btn ${activeTab === 'stats' ? 'active' : ''}`}
          onClick={() => setActiveTab('stats')}
        >
          üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        </button>
      </div>

      {activeTab === 'search' && (
        <div className="search-section">
          <h2>üîç –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –¥–æ–≥–æ–≤–æ—Ä–æ–≤</h2>
          <div className="search-box">
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ –ø–æ –§–ò–û, email, —Ç–µ–ª–µ—Ñ–æ–Ω—É..."
              className="search-input"
            />
          </div>
          <div className="no-results">
            <p>–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤</p>
          </div>
        </div>
      )}

      {activeTab === 'submit' && (
        <div className="submit-section">
          <h2>üìù –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ —É—Ä–µ–≥—É–ª–∏—Ä–æ–≤—â–∏–∫—É</h2>
          
          <div className="claim-form">
            <div className="form-group">
              <label>ID –¥–æ–≥–æ–≤–æ—Ä–∞:</label>
              <input
                type="number"
                value={submitForm.contract_id}
                onChange={(e) => setSubmitForm({...submitForm, contract_id: e.target.value})}
                placeholder="–í–≤–µ–¥–∏—Ç–µ ID –¥–æ–≥–æ–≤–æ—Ä–∞"
              />
            </div>

            <div className="form-group">
              <label>–î–∞—Ç–∞ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è:</label>
              <input
                type="date"
                value={submitForm.incident_date}
                onChange={(e) => setSubmitForm({...submitForm, incident_date: e.target.value})}
              />
            </div>

            <div className="form-group">
              <label>–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è:</label>
              <textarea
                value={submitForm.description}
                onChange={(e) => setSubmitForm({...submitForm, description: e.target.value})}
                placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è (–º–∏–Ω–∏–º—É–º 20 —Å–∏–º–≤–æ–ª–æ–≤)"
                rows={4}
              />
              <small className={submitForm.description.length >= 20 ? 'text-success' : 'text-warning'}>
                {submitForm.description.length}/20+ —Å–∏–º–≤–æ–ª–æ–≤
              </small>
            </div>

            <div className="form-group">
              <label>–°—É–º–º–∞ —É—â–µ—Ä–±–∞:</label>
              <input
                type="number"
                value={submitForm.claim_amount}
                onChange={(e) => setSubmitForm({...submitForm, claim_amount: e.target.value})}
                placeholder="–°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö"
              />
            </div>

            <div className="form-group">
              <label>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</label>
              <select
                value={submitForm.priority}
                onChange={(e) => setSubmitForm({...submitForm, priority: e.target.value})}
              >
                <option value="low">–ù–∏–∑–∫–∏–π</option>
                <option value="normal">–û–±—ã—á–Ω—ã–π</option>
                <option value="high">–í—ã—Å–æ–∫–∏–π</option>
                <option value="urgent">–°—Ä–æ—á–Ω—ã–π</option>
              </select>
            </div>

            <div className="form-group">
              <label>–ö–æ–Ω—Ç–∞–∫—Ç –∫–ª–∏–µ–Ω—Ç–∞:</label>
              <input
                type="text"
                value={submitForm.customer_contact}
                onChange={(e) => setSubmitForm({...submitForm, customer_contact: e.target.value})}
                placeholder="–¢–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ email –¥–ª—è —Å–≤—è–∑–∏"
              />
            </div>

            <div className="form-actions">
              <button 
                onClick={handleSubmitClaim}
                disabled={submitLoading}
                className="submit-btn"
              >
                {submitLoading ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
              </button>
            </div>
          </div>

          {submitResult && (
            <div className="submit-result">
              {submitResult.error ? (
                <div className="error-result">
                  <h3>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏</h3>
                  <p>{submitResult.error}</p>
                </div>
              ) : (
                <div className="success-result">
                  <h3>‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</h3>
                  <div className="result-details">
                    <p><strong>–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏:</strong> {submitResult.claim_number}</p>
                    <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {submitResult.status}</p>
                    <p><strong>–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:</strong> {submitResult.estimated_processing_time}</p>
                    <p><strong>–£—Ä–µ–≥—É–ª–∏—Ä–æ–≤—â–∏–∫ –Ω–∞–∑–Ω–∞—á–µ–Ω:</strong> {submitResult.adjuster_assigned ? '–î–∞' : '–ù–µ—Ç'}</p>
                    
                    <div className="validation-checklist">
                      <h4>–ß–µ–∫-–ª–∏—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏:</h4>
                      {Object.entries(submitResult.validation_checklist).map(([key, value]) => (
                        <div key={key} className={`checklist-item ${value ? 'valid' : 'invalid'}`}>
                          {value ? '‚úÖ' : '‚ùå'} {key}
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              )}
            </div>
          )}
        </div>
      )}

      {activeTab === 'stats' && (
        <div className="stats-section">
          <h2>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã</h2>
          <div className="operator-stats">
            <div className="stat-card">
              <h3>–°–µ–≥–æ–¥–Ω—è</h3>
              <div className="stat-details">
                <p>–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–π: <strong>12</strong></p>
                <p>–°–æ–∑–¥–∞–Ω–æ –∑–∞—è–≤–æ–∫: <strong>8</strong></p>
                <p>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: <strong>15</strong></p>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default OperatorPage; 